<?php	session_start();	$u_id = getUserId();	require "class.FileUtil.php";	//$file_operator = new FileUtil();		$source_dir = "files";	$dest_dir = "users/".$u_id."/tempImgs";	//echo $u_id, " \n", $source_dir, "\n", $dest_dir ,"\n";		makeSureDestDirExists( $u_id );	copyImagesToFolderUsersTempImg($source_dir, $dest_dir);	//renameImagesAndCreateDataTxt($dest_dir);	callMergeProgram( $dest_dir );	$image_id = insertResultImageToDB( $u_id, $dest_dir );	if( $image_id )		$result = renameResultImage( $u_id, $image_id );	if (isset($result))		echo "<h1>going to show the result.</h1>", "<meta http-equiv='refresh' content='1;url=./editImageDescription.php' />";	else		echo "<h1>Merge fail and no result image generated.</h1>","<meta http-equiv='refresh' content='2;url=../../home.php' />";?><?php function getUserId(){	if( isset( $_SESSION['u_id']) )		return $_SESSION['u_id'];	else		return 'tempUser';}function makeSureDestDirExists( $u_id ){	$folder = 'users';		$user_folder = 'users/'.$u_id;	$img_folder = 'users/'.$u_id.'/tempImgs';	if( file_exists($folder) )	{			if( file_exists($user_folder) )		{			if( file_exists($img_folder) )				clearDir( $img_folder );			else 				@mkdir( $img_folder );		}		else		{			@chmod( $folder, 0777);			@mkdir( $user_folder );				@mkdir( $img_folder );		}	}	else	{		@chmod( ".", 0777);		@mkdir( $folder );		@chmod( $folder, 0777);		@mkdir( $user_folder );		@mkdir( $img_folder );			}}function copyImagesToFolderUsersTempImg($source_dir, $dest_dir){	clearDir( $dest_dir );	//echo "clear dest_dir \n";	//createDir( $dest_dir );	//echo "create dest_dir \n";	copyAllImgToDestDir( $source_dir, $dest_dir);	//echo "copy all images of source_dir to dest_dir \n";}function clearDir($dest_dir) {	$dest_dir = str_replace('', '/', $dest_dir);	$dest_dir = substr($dest_dir, -1) == '/' ? $dest_dir : $dest_dir.'/';	if (!is_dir($dest_dir)) {		return false;	}	$dirHandle = opendir($dest_dir);	while(false !== ($file = readdir($dirHandle))) {		if ($file == '.' || $file == '..') {			continue;		}		if (!is_dir($dest_dir.$file)) {			FileUtil::unlinkFile($dest_dir . $file);		} else {			FileUtil::unlinkDir($dest_dir . $file);		}	}	closedir($dirHandle);}function copyAllImgToDestDir( $oldDir, $aimDir ){ 	$aimDir = str_replace('', '/', $aimDir);	$aimDir = substr($aimDir, -1) == '/' ? $aimDir : $aimDir.'/';	$oldDir = str_replace('', '/', $oldDir);	$oldDir = substr($oldDir, -1) == '/' ? $oldDir : $oldDir.'/';	if (!is_dir($oldDir)) {		return false;	}	if (!file_exists($aimDir)) {		FileUtil::createDir($aimDir);	}	$dirHandle = opendir($oldDir);	while(false !== ($file = readdir($dirHandle))) {		if ($file == '.' || $file == '..') {			continue;		}		if (!is_dir($oldDir . $file)) {			if( is_image( $oldDir . $file ) )				//FileUtil::copyFile($oldDir . $file, $aimDir . $file, true);				FileUtil::moveFile($oldDir . $file, $aimDir . $file, true);			clearDir($oldDir."/thumbnail");		} 	}	return closedir($dirHandle);}function is_image( $file_name ){	$str_arr = explode(".", $file_name);	$arr_length = count($str_arr);	$file_type = $str_arr[ $arr_length - 1 ];	$file_type = strtolower( $file_type );	switch( $file_type ){		case "jpg":		case "png":		case "gif":			return true;		default :			return false;	}	return false;}function renameImagesAndCreateDataTxt($dest_dir){	$dest_dir = str_replace('', '/', $dest_dir);	$dest_dir = substr($dest_dir, -1) == '/' ? $dest_dir : $dest_dir.'/';	if (!is_dir($dest_dir)) {		return false;	}	$dirHandle = opendir($dest_dir);	$i = 0;	$file_names = [];	while(false !== ($file = readdir($dirHandle))) {		if ($file == '.' || $file == '..') {			continue;		}		if (!is_dir($dest_dir.$file)) {			rename($dest_dir.$file, $dest_dir.$i.$file);			$file_names[] = $dest_dir.$i.$file;			$i++;		} /*		else {			renameImagesAndCreateDataTxt( $dest_dir.$file );		} */	}	closedir($dirHandle);	$size = count($file_names);	/*	for( $j = 0; $j < $size; $j++ )		file_put_contents( $dest_dir."data.txt", $file_names[$j]."\r\n", FILE_APPEND );	*/	$handler = fopen( $dest_dir."data.txt", 'w');	if( $handler )	{		foreach ($file_names as $name) 			fwrite( $handler, $name."\r\n" );		}	return $size;}function callMergeProgram( $dest_dir ){	$imgNum = renameImagesAndCreateDataTxt($dest_dir);	if( $imgNum == false )		return false;	echo $imgNum;	if( file_exists( $dest_dir."/data.txt" ) )		//echo " data.txt exists. ";			$cmd = "program\\auto_joiner.exe ".$imgNum." ".$dest_dir."/data.txt ".$dest_dir."/result.jpg";	echo "<br />", $cmd, "<br />";		exec($cmd, $output);	if( file_exists( $dest_dir."\\result.jpg") )	{		echo json_encode( Array("status"=>true) );	}	else {		echo json_encode( Array("status"=>false) );	}}function insertResultImageToDB( $u_id, $dest_dir ){	if( !file_exists( $dest_dir."\\result.jpg") )		return false;			$conn = @mysql_connect("localhost","root","");	if (!$conn){		die("Fail to connect DB£º" . mysql_error());	}		mysql_query( 'SET NAMES UTF8' ); 	mysql_select_db("em", $conn);		$sql = "INSERT INTO resultimg (u_id,content) VALUES ('$u_id','')";	if( mysql_query($sql,$conn) )	{		return mysql_insert_id();	}	return false;}function renameResultImage( $u_id, $image_id ){	$_SESSION["image_id"] = $image_id;	$newName = $image_id.".jpg";	$img_path = 'users/'.$u_id.'/tempImgs';	$img_oldName = $img_path."/result.jpg";	$img_newName = $img_path."/".$newName;	$toPath = 'users/'.$u_id.'/result';	if( file_exists($img_oldName) )	{			rename($img_oldName,$img_newName);	}	if( file_exists($toPath) )	{		copy($img_newName,$toPath.'/'.$newName);	}	else	{		@chmod( '.', 0777);		@mkdir( $toPath );		copy($img_newName,$toPath.'/'.$newName);	}		return $toPath.'/'.$newName;}?>