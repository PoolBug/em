<?php	session_start();	$uid = getUserId();	require "class.FileUtil.php";	//$file_operator = new FileUtil();		$source_dir = "files/thumbnail";	$dest_dir = "users/".$uid."/tempImgs";	echo $uid, " \n", $source_dir, "\n", $dest_dir ,"\n";		copyImagesToFolderUsersTempImg($source_dir, $dest_dir);	//renameImagesAndCreateDataTxt($dest_dir);	callMergeProgram( $dest_dir );?><?php function getUserId(){	if( isset( $_SESSION['u_id']) )		return $_SESSION['u_id'];	else		return 'tempUser';}function copyImagesToFolderUsersTempImg($source_dir, $dest_dir){	clearDir( $dest_dir );	echo "clear dest_dir \n";	//createDir( $dest_dir );	//echo "create dest_dir \n";	copyDir( $source_dir, $dest_dir);	echo "copy source_dir to dest_dir \n";}function clearDir($dest_dir) {	$dest_dir = str_replace('', '/', $dest_dir);	$dest_dir = substr($dest_dir, -1) == '/' ? $dest_dir : $dest_dir.'/';	if (!is_dir($dest_dir)) {		return false;	}	$dirHandle = opendir($dest_dir);	while(false !== ($file = readdir($dirHandle))) {		if ($file == '.' || $file == '..') {			continue;		}		if (!is_dir($dest_dir.$file)) {			FileUtil::unlinkFile($dest_dir . $file);		} else {			FileUtil::unlinkDir($dest_dir . $file);		}	}	closedir($dirHandle);}function copyDir( $source_dir, $dest_dir){ 	if( !is_dir($dest_dir) )		return false;	FileUtil::copyDir( $source_dir, $dest_dir, true); }function renameImagesAndCreateDataTxt($dest_dir){	$dest_dir = str_replace('', '/', $dest_dir);	$dest_dir = substr($dest_dir, -1) == '/' ? $dest_dir : $dest_dir.'/';	if (!is_dir($dest_dir)) {		return false;	}	$dirHandle = opendir($dest_dir);	$i = 0;	$file_names = [];	while(false !== ($file = readdir($dirHandle))) {		if ($file == '.' || $file == '..') {			continue;		}		if (!is_dir($dest_dir.$file)) {			rename($dest_dir.$file, $dest_dir.$i.$file);			$file_names[] = $dest_dir.$i.$file;			$i++;		} else {			renameImagesAndCreateDataTxt( $dest_dir.$file );		}	}	closedir($dirHandle);	$size = count($file_names);	for( $j = 0; $j < $size; $j++ )		file_put_contents( $dest_dir."data.txt", $file_names[$j]."\r\n", FILE_APPEND );		return $size;}function callMergeProgram( $dest_dir ){	$imgNum = renameImagesAndCreateDataTxt($dest_dir);	if( $imgNum == false )		return false;	echo $imgNum;	if( file_exists( $dest_dir."/data.txt" ) )		echo " data.txt exists. ";			$cmd = "program\\auto_joiner.exe ".$imgNum." ".$dest_dir."/data.txt ".$dest_dir."/result.jpg";	echo "<br />", $cmd, "<br />";		exec($cmd, $output);	if( file_exists( $dest_dir."\\result.jpg") )	{		echo json_encode( Array("status"=>true) );	}	else {		echo json_encode( Array("output"=>$output, "status"=>false) );	}}function getImgNum( $dest_dir ){	}?><?php class SourceImagesHandler{	protected $user_id;	protected $images_source_dir;	protected $images_destination_dir;		function __construct( $user_id )	{		$this->user_id = $user_id;		$images_source_dir = "files/thumbnail";		$images_destination_dir = "../../backstage/users/".$user_id."/tempImgs";	}		function getParametersForMergeProgram()	{		$this->moveImagesToUserFolder();		echo "move finished";		$this->renameImagesInUserFolder();		echo "rename finished";		$this->writeParametersIntoTxt();		echo "all finished";	}		protected function moveImagesToUserFolder( )	{		FileUtil::unlinkDir( $images_source_dir );		FileUtil::moveDir( $images_source_dir, $images_destination_dir );		FileUtil::unlinkDir( $images_source_dir );	}	protected function renameImagesInUserFolder()	{		if ( !is_dir($images_destination_dir) ) {			return false;		}	   		@$dir_handler = opendir( $images_destination_dir );	   		$i = 0;		while( false !== ($file = readdir($dir_handler) ) ){			if( $file == "." || $file == ".." ){				continue;			}			rename( $file, $i . $file );			$i++;		}		return true;	}	protected function writeParametersIntoTxt()	{		if ( !is_dir($images_destination_dir) ) {			return false;		}				@$dir_handler = opendir( $images_destination_dir );	   		$file_names = [];		while( false !== ($file = readdir($dir_handler) ) ){			if( $file == "." || $file == ".." ){				continue;			}			$file_names[] = $file;		}		$data_txt = $images_destination_dir . "/data.txt";		FileUtil::unlinkFile( $data_txt );		for ($i = 0; $i < $file_name.length; $i++)		{			file_put_contents( $data_txt );		}	}	}?>